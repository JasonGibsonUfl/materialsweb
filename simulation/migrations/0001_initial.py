# Generated by Django 2.2.12 on 2020-06-03 12:56

from django.db import migrations, models
import django.db.models.deletion
import simulation.custom


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('formula', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('generic', models.CharField(blank=True, max_length=255, null=True)),
                ('element_list', models.CharField(blank=True, max_length=255, null=True)),
                ('ntypes', models.IntegerField(null=True)),
                ('mass', models.FloatField(blank=True, null=True)),
                ('meidema', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'compositions',
            },
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('z', models.IntegerField()),
                ('name', models.CharField(max_length=20)),
                ('symbol', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('group', models.IntegerField()),
                ('period', models.IntegerField()),
                ('mass', models.FloatField()),
                ('density', models.FloatField()),
                ('volume', models.FloatField()),
                ('atomic_radii', models.IntegerField()),
                ('van_der_waals_radii', models.IntegerField()),
                ('covalent_radii', models.IntegerField()),
                ('scattering_factors', simulation.custom.DictField()),
                ('chemical_potential', models.FloatField()),
                ('melt', models.FloatField()),
                ('boil', models.FloatField()),
                ('specific_heat', models.FloatField()),
                ('electronegativity', models.FloatField()),
                ('first_ionization_energy', models.FloatField()),
                ('s_elec', models.IntegerField()),
                ('p_elec', models.IntegerField()),
                ('d_elec', models.IntegerField()),
                ('f_elec', models.IntegerField()),
                ('HHI_P', models.FloatField(default=0)),
                ('HHI_R', models.FloatField(default=0)),
                ('production', models.FloatField(default=0)),
                ('radioactive', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'elements',
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('label', models.CharField(max_length=20, null=True)),
                ('ntypes', models.IntegerField(blank=True, null=True)),
                ('natoms', models.IntegerField(blank=True, null=True)),
                ('composition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simulation.Composition')),
                ('duplicate_of', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='duplicates', to='simulation.Entry')),
                ('element_set', models.ManyToManyField(to='simulation.Element')),
            ],
            options={
                'db_table': 'entries',
            },
        ),
        migrations.CreateModel(
            name='MetaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=15)),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'meta_data',
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'operations',
            },
        ),
        migrations.CreateModel(
            name='Rotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a11', models.FloatField()),
                ('a12', models.FloatField()),
                ('a13', models.FloatField()),
                ('a21', models.FloatField()),
                ('a22', models.FloatField()),
                ('a23', models.FloatField()),
                ('a31', models.FloatField()),
                ('a32', models.FloatField()),
                ('a33', models.FloatField()),
            ],
            options={
                'db_table': 'rotations',
            },
        ),
        migrations.CreateModel(
            name='Spacegroup',
            fields=[
                ('number', models.IntegerField(primary_key=True, serialize=False)),
                ('hm', models.CharField(blank=True, max_length=30, null=True)),
                ('hall', models.CharField(blank=True, max_length=30, null=True)),
                ('schoenflies', models.CharField(max_length=30)),
                ('lattice_system', models.CharField(max_length=20)),
                ('centrosymmetric', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'spacegroups',
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('name', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('ox', models.FloatField(blank=True, null=True)),
                ('element', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simulation.Element')),
            ],
            options={
                'db_table': 'species',
            },
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('z', models.FloatField()),
            ],
            options={
                'db_table': 'translations',
            },
        ),
        migrations.CreateModel(
            name='WyckoffSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=1)),
                ('multiplicity', models.IntegerField(blank=True, null=True)),
                ('x', models.CharField(max_length=8)),
                ('y', models.CharField(max_length=8)),
                ('z', models.CharField(max_length=8)),
                ('spacegroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='site_set', to='simulation.Spacegroup')),
            ],
            options={
                'db_table': 'wyckoffsites',
            },
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=63)),
                ('measured', models.BooleanField(default=False)),
                ('natoms', models.IntegerField(blank=True, null=True)),
                ('nsites', models.IntegerField(blank=True, null=True)),
                ('ntypes', models.IntegerField(blank=True, null=True)),
                ('x1', models.FloatField()),
                ('x2', models.FloatField()),
                ('x3', models.FloatField()),
                ('y1', models.FloatField()),
                ('y2', models.FloatField()),
                ('y3', models.FloatField()),
                ('z1', models.FloatField()),
                ('z2', models.FloatField()),
                ('z3', models.FloatField()),
                ('volume', models.FloatField(blank=True, null=True)),
                ('volume_pa', models.FloatField(blank=True, null=True)),
                ('sxx', models.FloatField(default=0)),
                ('syy', models.FloatField(default=0)),
                ('szz', models.FloatField(default=0)),
                ('sxy', models.FloatField(default=0)),
                ('syz', models.FloatField(default=0)),
                ('szx', models.FloatField(default=0)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('energy_pa', models.FloatField(blank=True, null=True)),
                ('magmom', models.FloatField(blank=True, null=True)),
                ('magmom_pa', models.FloatField(blank=True, null=True)),
                ('delta_e', models.FloatField(blank=True, null=True)),
                ('meta_stability', models.FloatField(blank=True, null=True)),
                ('composition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='structure_set', to='simulation.Composition')),
                ('element_set', models.ManyToManyField(to='simulation.Element')),
                ('entry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='simulation.Entry')),
                ('meta_data', models.ManyToManyField(to='simulation.MetaData')),
                ('spacegroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simulation.Spacegroup')),
                ('species_set', models.ManyToManyField(to='simulation.Species')),
            ],
            options={
                'db_table': 'structures',
                'unique_together': {('entry', 'label')},
            },
            bases=(models.Model, object),
        ),
        migrations.AddField(
            model_name='spacegroup',
            name='centering_vectors',
            field=models.ManyToManyField(to='simulation.Translation'),
        ),
        migrations.AddField(
            model_name='spacegroup',
            name='operations',
            field=models.ManyToManyField(null=True, to='simulation.Operation'),
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('z', models.FloatField()),
                ('structure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='site_set', to='simulation.Structure')),
                ('wyckoff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simulation.WyckoffSite')),
            ],
            options={
                'db_table': 'sites',
            },
        ),
        migrations.CreateModel(
            name='Potential',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('potcar', models.TextField()),
                ('name', models.CharField(max_length=10)),
                ('xc', models.CharField(max_length=3)),
                ('gw', models.BooleanField(default=False)),
                ('paw', models.BooleanField(default=False)),
                ('us', models.BooleanField(default=False)),
                ('enmax', models.FloatField()),
                ('enmin', models.FloatField()),
                ('date', models.CharField(max_length=20)),
                ('electrons', models.TextField(blank=True, null=True)),
                ('element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulation.Element')),
            ],
            options={
                'db_table': 'vasp_potentials',
            },
        ),
        migrations.AddField(
            model_name='operation',
            name='rotation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulation.Rotation'),
        ),
        migrations.AddField(
            model_name='operation',
            name='translation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulation.Translation'),
        ),
        migrations.CreateModel(
            name='Hubbard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('convention', models.CharField(max_length=20)),
                ('ox', models.FloatField(default=None, null=True)),
                ('u', models.FloatField(default=0)),
                ('l', models.IntegerField(default=-1)),
                ('element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hubbards', to='simulation.Element')),
                ('ligand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='simulation.Element')),
            ],
            options={
                'db_table': 'hubbards',
            },
        ),
        migrations.AddField(
            model_name='entry',
            name='meta_data',
            field=models.ManyToManyField(to='simulation.MetaData'),
        ),
        migrations.AddField(
            model_name='entry',
            name='species_set',
            field=models.ManyToManyField(to='simulation.Species'),
        ),
        migrations.CreateModel(
            name='DOS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gap', models.FloatField(blank=True, default=0, null=True)),
                ('data', simulation.custom.NumpyArrayField(blank=True, null=True)),
                ('file', models.CharField(blank=True, max_length=128, null=True)),
                ('entry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='simulation.Entry')),
            ],
            options={
                'db_table': 'dos',
            },
        ),
        migrations.AddField(
            model_name='composition',
            name='element_set',
            field=models.ManyToManyField(null=True, to='simulation.Element'),
        ),
        migrations.AddField(
            model_name='composition',
            name='meta_data',
            field=models.ManyToManyField(to='simulation.MetaData'),
        ),
        migrations.AddField(
            model_name='composition',
            name='structure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='simulation.Structure'),
        ),
        migrations.CreateModel(
            name='Calculation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configuration', models.CharField(blank=True, db_index=True, max_length=15, null=True)),
                ('dimension', models.IntegerField(blank=True)),
                ('label', models.CharField(default='', max_length=63)),
                ('path', models.CharField(db_index=True, max_length=255, null=True)),
                ('natoms', models.IntegerField(blank=True, null=True)),
                ('settings', simulation.custom.DictField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('energy_pa', models.FloatField(blank=True, null=True)),
                ('magmom', models.FloatField(blank=True, null=True)),
                ('magmom_pa', models.FloatField(blank=True, null=True)),
                ('band_gap', models.FloatField(blank=True, null=True)),
                ('irreducible_kpoints', models.FloatField(blank=True, null=True)),
                ('formation_energy', models.FloatField(blank=True, null=True)),
                ('attempt', models.IntegerField(blank=True, default=0, null=True)),
                ('nsteps', models.IntegerField(blank=True, null=True)),
                ('converged', models.NullBooleanField()),
                ('runtime', models.FloatField(blank=True, null=True)),
                ('composition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simulation.Composition')),
                ('dos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simulation.DOS')),
                ('element_set', models.ManyToManyField(to='simulation.Element')),
                ('entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simulation.Entry')),
                ('hubbard_set', models.ManyToManyField(to='simulation.Hubbard')),
                ('input', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='calculated', to='simulation.Structure')),
                ('meta_data', models.ManyToManyField(to='simulation.MetaData')),
                ('output', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source', to='simulation.Structure')),
                ('potential_set', models.ManyToManyField(to='simulation.Potential')),
            ],
            options={
                'db_table': 'calculations',
            },
        ),
        migrations.CreateModel(
            name='Atom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ox', models.IntegerField(blank=True, default=None, null=True)),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('z', models.FloatField()),
                ('fx', models.FloatField(blank=True, null=True)),
                ('fy', models.FloatField(blank=True, null=True)),
                ('fz', models.FloatField(blank=True, null=True)),
                ('magmom', models.FloatField(blank=True, null=True)),
                ('charge', models.FloatField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('occupancy', models.FloatField(default=1)),
                ('element', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simulation.Element')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='atom_set', to='simulation.Site')),
                ('structure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='atom_set', to='simulation.Structure')),
                ('wyckoff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simulation.WyckoffSite')),
            ],
            options={
                'db_table': 'atoms',
            },
        ),
    ]
